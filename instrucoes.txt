* ----------------------------INSTRUÇÕES GERAIS ---------------------------------------------------------------*

1) Clonar o projeto
2) Criar arquivo .env na raiz do projeto (não renomear o arquivo .env.example)
  Ele deverá conter as mesmas variáveis do .env.example
3) Conectar o banco de dados. Criar um schema com o nome moove_bike
4) Rodar migration (npx sequelize-cli db:migrate)
5) Rodar seed (npx sequelize-cli db:seed:all)


* --------------------------Questões realizadas no front -----------------------------*

1- Criadas as views do admin
2 - Criada a view do carrinho, faltando apenas pegar o id para renderizar junto à pagina do cart
3 - Dashboard desenhado e aguardando definição dos itens que serão renderizados.


* ------------------------------PENDÊNCIAS ------------------------------------------*
1 - Carrinho de Compra - 
2 - Busca das Informações do Dashboard 
3 - Tratativa de erros nas páginas (erros de login e erros do banco de dados)
4 - Newsletter
5 - Fale Conosco
6 - Redes Sociais
7 - Regras Gerais
8 - Termo Uso
9 - Refatorar CSS 
10 - Refatorar HTML do Rodapé



* ----------------------------INSTRUÇÕES DO PROJETO PARA FRONT-END ---------------------------------------------*

- As três entidades da área administrativa (user, pack e rental) contém o CRUD completo. 
Porém nem todos os métodos estão sendo utilizados. Somente removeremos quando o projeto estiver pronto.
Para facilitar vou listar onde estão sendo utilizados cada método:
(Obs: os métodos estão na pasta Controller de cada entidade )

ADMIN > PACKS

- list: utilizado para nas views "home" (seção 3) e "packages"
- create: NÃO utilizado
- edit: NÃO utilizado
- remove: NÃO utilizado

- createRule: NÃO utilizado
- listRules: utilizado para nas views "home" (seção 3) e "packages"
- editRule: NÃO utilizado
- removeRule: NÃO utilizado

ADMIN > RENTALS

- list: NÃO utilizado
- listPending: utilizado na view "adminRentalsPending"
- listActives: utilizado na view "adminRentalsActive"
- listInactives: utilizado na view "adminRentalsInactive"
- activate: deverá ser utilizado no BOTÃO ATIVAR na view "adminRentalsPending"
- desactivate: deverá ser utilizado no BOTÃO DESATIVAR na view "adminRentalsActive"

Obs: O botão desativar ao ser clicado deve mostrar um modal com o plano que está sendo
desativado, os dias de atraso e multa. (Linhas 73 e 74 - Admin > Rentals > Controller)
O atraso e multa não estão sendo armazenados no banco de dados.

ADMIN > USERS

- list: utilizado na view "adminUsers"
- listOne: NÃO utilizado
- listByEmail: utilizado para autenticação e reset de senha (Auth, Session)
- edit: Não utilizado
- remove: Não utilizado
- restore: Não utilizado

